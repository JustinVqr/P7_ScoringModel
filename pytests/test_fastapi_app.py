from fastapi.testclient import TestClient
from app.api import app  # Assurez-vous que l'importation du module est correcte

client = TestClient(app)

def test_read_root():
    response = client.get("/")
    assert response.status_code == 200
    assert response.json() == {"message": "Bonjour, vous êtes bien sur l'application de scoring, hébergée sur Heroku. "
                                          "Cette API permet de prédire la probabilité de défaut de paiement pour un client "
                                          "en fonction de ses caractéristiques. Envoyez une requête POST à /predict pour obtenir une prédiction."}

def test_predict():
    # Exemple de données client
    client_data = {
        "PAYMENT_RATE": 0.02,
        "EXT_SOURCE_2": 0.5,
        "EXT_SOURCE_3": 0.6,
        "DAYS_BIRTH": -12000,
        "AMT_ANNUITY": 25000.0,
        "INSTAL_AMT_PAYMENT_SUM": 150000.0,
        "PREV_CNT_PAYMENT_MEAN": 10.0,
        "AMT_CREDIT": 200000.0,
        "INSTAL_DPD_MEAN": 0.0,
        "APPROVED_CNT_PAYMENT_MEAN": 12.0,
        "AMT_GOODS_PRICE": 180000.0,
        "DAYS_ID_PUBLISH": -4000,
        "DAYS_EMPLOYED": -2000,
        "BURO_DAYS_CREDIT_MAX": -3000.0,
        "POS_MONTHS_BALANCE_SIZE": 6.0,
        "INSTAL_DAYS_ENTRY_PAYMENT_MAX": -30.0,
        "DAYS_LAST_PHONE_CHANGE": -2000.0,
        "INSTAL_AMT_PAYMENT_MIN": 5000.0,
        "BURO_DAYS_CREDIT_ENDDATE_MAX": -1000.0,
        "INSTAL_DAYS_ENTRY_PAYMENT_MEAN": -15.0,
        "BURO_AMT_CREDIT_SUM_DEBT_MEAN": 50000.0,
        "APPROVED_AMT_ANNUITY_MEAN": 10000.0,
        "INSTAL_PAYMENT_DIFF_MEAN": 2000.0,
        "PREV_NAME_CONTRACT_STATUS_Refused_MEAN": 0.1,
        "DAYS_EMPLOYED_PERC": 0.7,
        "PREV_PRODUCT_COMBINATION_CashXSelllow_MEAN": 0.1,
        "INSTAL_AMT_PAYMENT_MAX": 25000.0,
        "BURO_AMT_CREDIT_SUM_SUM": 300000.0,
        "ANNUITY_INCOME_PERC": 0.2,
        "PREV_AMT_DOWN_PAYMENT_MAX": 0.0,
        "INCOME_CREDIT_PERC": 0.5,
        "INSTAL_DAYS_ENTRY_PAYMENT_SUM": -300.0,
        "PREV_APP_CREDIT_PERC_MIN": 0.9,
        "NAME_CONTRACT_TYPE_Cashloans": False,
        "REGION_RATING_CLIENT_W_CITY": 2,
        "OCCUPATION_TYPE_Drivers": False,
        "NAME_EDUCATION_TYPE_Highereducation": False,
        "BURO_CREDIT_TYPE_Mortgage_MEAN": 0.0,
        "APPROVED_CNT_PAYMENT_SUM": 36.0,
        "DAYS_REGISTRATION": -4500.0,
        "POS_SK_DPD_DEF_MEAN": 0.0,
        "BURO_MONTHS_BALANCE_SIZE_SUM": 20.0,
        "PREV_NAME_YIELD_GROUP_high_MEAN": 0.1,
        "PREV_NAME_YIELD_GROUP_low_action_MEAN": 0.2,
        "APPROVED_APP_CREDIT_PERC_MAX": 0.9,
        "REGION_POPULATION_RELATIVE": 0.02,
        "PREV_APP_CREDIT_PERC_MEAN": 0.7,
        "INSTAL_NUM_INSTALMENT_VERSION_NUNIQUE": 1.0,
        "BURO_AMT_CREDIT_SUM_LIMIT_SUM": 10000.0,
        "BURO_AMT_CREDIT_SUM_MAX": 50000.0,
        "INSTAL_DBD_MAX": 0.0,
        "NAME_FAMILY_STATUS_Married": False,
        "PREV_NAME_PAYMENT_TYPE_XNA_MEAN": 0.0,
        "BURO_DAYS_CREDIT_MEAN": -3000.0,
        "FLAG_OWN_CAR": 0,
        "BURO_CREDIT_TYPE_Microloan_MEAN": 0.0,
        "APPROVED_DAYS_DECISION_MAX": -10.0,
        "BURO_AMT_CREDIT_SUM_DEBT_SUM": 200000.0,
        "INSTAL_PAYMENT_PERC_MEAN": 0.5,
        "PREV_NAME_CLIENT_TYPE_New_MEAN": 0.0,
        "INSTAL_AMT_PAYMENT_MEAN": 20000.0,
        "BURO_AMT_CREDIT_SUM_OVERDUE_MEAN": 0.0,
        "INSTAL_DBD_MEAN": 0.0,
        "BURO_AMT_CREDIT_SUM_MEAN": 20000.0,
        "INCOME_PER_PERSON": 5000.0,
        "BURO_DAYS_CREDIT_ENDDATE_MEAN": -1500.0,
        "AMT_REQ_CREDIT_BUREAU_QRT": 0.0,
        "INSTAL_PAYMENT_DIFF_SUM": 1000.0,
        "BURO_CREDIT_ACTIVE_Active_MEAN": 0.9,
        "POS_MONTHS_BALANCE_MEAN": 0.0,
        "PREV_CNT_PAYMENT_SUM": 60.0,
        "PREV_DAYS_DECISION_MIN": -500.0,
        "PREV_DAYS_DECISION_MEAN": -200.0,
        "INSTAL_DBD_SUM": 0.0,
        "PREV_PRODUCT_COMBINATION_CashStreetlow_MEAN": 0.0,
        "APPROVED_AMT_ANNUITY_MAX": 30000.0,
        "APPROVED_AMT_CREDIT_MAX": 150000.0,
        "PREV_NAME_GOODS_CATEGORY_Furniture_MEAN": 0.1,
        "HOUR_APPR_PROCESS_START": 10,
        "OCCUPATION_TYPE_Laborers": False,
        "APPROVED_AMT_APPLICATION_MIN": 10000.0,
        "POS_NAME_CONTRACT_STATUS_Active_MEAN": 0.8,
        "PREV_PRODUCT_COMBINATION_POSindustrywithinterest_MEAN": 0.1,
        "POS_NAME_CONTRACT_STATUS_Completed_MEAN": 0.1,
        "NAME_INCOME_TYPE_Working": False,
        "PREV_NAME_GOODS_CATEGORY_XNA_MEAN": 0.0,
        "DEF_60_CNT_SOCIAL_CIRCLE": 0.0,
        "FLAG_DOCUMENT_3": 1,
        "APPROVED_AMT_CREDIT_MIN": 0.0,
        "PREV_AMT_ANNUITY_MIN": 0.0,
        "INSTAL_DPD_MAX": 0.0,
        "INSTAL_PAYMENT_DIFF_MAX": 0.0,
        "DEF_30_CNT_SOCIAL_CIRCLE": 0.0,
        "BURO_CREDIT_TYPE_Carloan_MEAN": 0.0,
        "POS_SK_DPD_DEF_MAX": 0.0,
        "APPROVED_HOUR_APPR_PROCESS_START_MAX": 0.0,
        "ORGANIZATION_TYPE_Construction": False,
        "PREV_CHANNEL_TYPE_Channelofcorporatesales_MEAN": 0.0
    }
    
    response = client.post("/predict", json=client_data)
    assert response.status_code == 200
    assert "prediction" in response.json()
    assert "probability" in response.json()
